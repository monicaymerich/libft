/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_strtrim.c                                       :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: maymeric <maymeric@student.42barcel>       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/01/22 15:17:34 by maymeric          #+#    #+#             */
/*   Updated: 2024/02/01 12:11:49 by maymeric         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

int	check_match(char s, char const *set)
{
	int		i;

	i =  0;
	while (set[i] != '\0')
		{
			if (s == set[j])
				return (1);
			i++;
		}
	return (0);
}

int	check_len(char const *s, char const *set)
{
        if (check_match(s[i] == 0)
49         {
50             i++;
51             len++;
52         }
53         while (check_match(s[i] == 1)
54             i++;
55         while (s[i] != '\0')
56         {
57             i++;
58             len++;
59         }        if (check_match(s[i] == 0)
49         {
50             i++;
51             len++;
52         }
53         while (check_match(s[i] == 1)
54             i++;
55         while (s[i] != '\0')
56         {
57             i++;
58             len++;
59         }X^E

}
char	*ft_strtrim(char const *s1, char const *set)
{
	int		i;
	int		j;
	int		found;
	size_t	len;
	char	*result;

	i = 0;
	j = 0;
	len = 0;
	if (!s1 || !set)
		return (NULL);
	while(s1[i] != '\0')
	{
		if (check_match(s[i] == 0)
		{
			i++;
			len++;
		}
		while (check_match(s[i] == 1)
			i++;
		while (s[i] != '\0')
		{
			i++;
			len++;
		}
	}
/*
	len = len_calc(s1, set);
	result = (char *)malloc(len);
	while (s1[i] != '\0')
	{
		j = 0;
		while (set[j] != '\0' && set[j] != s1[i])
			j++;
		if (set[j] == '\0')
		{
			result[k] = s1[i];
			k++;
		}
		i++;
	}
	result[k] = '\0';
	return (result);*/
}

int	main(void)
{
	char	test[] = "  . abcdefg";
	char	tr[] = " ";
	char	*result;

	result = ft_strtrim(test, tr);
	printf("Result: %s\n", result);
	return (0);
}
